name: Create Release and Upload Asset

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    # --- 这是我们新增加的关键部分 ---
    permissions:
      contents: write
    # ---------------------------------
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare and Zip plugin files
        run: |
          # Create a temporary release dir to ensure root-level 'provider' is a file, not a directory
          rm -rf tmp_release || true
          mkdir -p tmp_release
          # Copy manifest and other root-level assets
          cp manifest.yaml tmp_release/ || true
          cp README.md tmp_release/ || true
          cp PRIVACY.md tmp_release/ || true
          cp LICENSE tmp_release/ || true
          cp requirements.txt tmp_release/ || true
          # Create a root-level provider file that points to the actual provider YAML path
          if [ -f provider/heygen_dify_plugin.yaml ]; then
            cp provider/heygen_dify_plugin.yaml tmp_release/provider || true
          fi
          # Copy tools, provider_files (actual python), assets
          cp -r tools tmp_release/ || true
          if [ -d provider_files ]; then cp -r provider_files tmp_release/ || true; fi
          if [ -d _assets ]; then cp -r _assets tmp_release/ || true; fi
          if [ -d assets ]; then cp -r assets tmp_release/ || true; fi
          # Include difypkg if present
          if [ -f heygen-dify-plugin.difypkg ]; then cp heygen-dify-plugin.difypkg tmp_release/ || true; fi
          # Zip the tmp_release directory contents
          (cd tmp_release && zip -r ../release.zip .) || true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip
